# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: infrastructure/adapters/grpc/geo/Contract.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import infrastructure.adapters.grpc.geo.Contract_pb2


class GeoBase(abc.ABC):

    @abc.abstractmethod
    async def GetGeolocation(self, stream: 'grpclib.server.Stream[infrastructure.adapters.grpc.geo.Contract_pb2.GetGeolocationRequest, infrastructure.adapters.grpc.geo.Contract_pb2.GetGeolocationReply]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/geo.Geo/GetGeolocation': grpclib.const.Handler(
                self.GetGeolocation,
                grpclib.const.Cardinality.UNARY_UNARY,
                infrastructure.adapters.grpc.geo.Contract_pb2.GetGeolocationRequest,
                infrastructure.adapters.grpc.geo.Contract_pb2.GetGeolocationReply,
            ),
        }


class GeoStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.GetGeolocation = grpclib.client.UnaryUnaryMethod(
            channel,
            '/geo.Geo/GetGeolocation',
            infrastructure.adapters.grpc.geo.Contract_pb2.GetGeolocationRequest,
            infrastructure.adapters.grpc.geo.Contract_pb2.GetGeolocationReply,
        )
