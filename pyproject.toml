[project]
name = "microarch-ru-ddd-in-practice-python"
version = "0.1.0"
description = ""
authors = [
    {name = "Nikolay Arkhipov",email = "cherrykolya@mail.ru"}
]
readme = "README.md"
requires-python = ">=3.11,<3.12"
package-mode = false

[tool.poetry.dependencies]
python = ">=3.11,<3.12"
fastapi = "^0.109.2"
uvicorn = "^0.27.1"
pydantic = "^2.6.1"
pydantic-settings = "^2.1.0"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.27"}
alembic = "^1.13.1"
asyncpg = "0.29.0"
docker = "^7.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-asyncio = "0.23.8"
testcontainers = {extras = ["postgres"], version = "^3.7.1"}
isort = "^5.12.0"
ruff = "^0.0.282"
black = "^23.7.0"
pytest-cov = "^6.2.1"
psycopg2-binary = "^2.9.10"

[tool.poetry.group.tools.dependencies]
pre-commit = "^2.17.0"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.black]
line-length = 120

[tool.isort]
profile = "black"
line_length = 120
skip_gitignore = true
py_version = "auto"

[tool.ruff]
line-length = 120
exclude = [
    "infrastructure/adapters/postgres/migrations",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
