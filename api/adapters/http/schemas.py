# generated by fastapi-codegen:
#   filename:  api/adapters/http/contract/openapi.yaml
#   timestamp: 2025-07-06T06:25:06+00:00

from __future__ import annotations

from typing import Annotated
from uuid import UUID

from pydantic import BaseModel, Field, NonNegativeInt, StringConstraints


class Location(BaseModel):
    """Модель геолокации."""

    x: NonNegativeInt = Field(description="X координата")
    y: NonNegativeInt = Field(description="Y координата")

    model_config = {"json_schema_extra": {"examples": [{"x": 10, "y": 20}]}}


class Order(BaseModel):
    """Модель заказа."""

    id: UUID = Field(description="Идентификатор")
    location: Location = Field(description="Геолокация")

    model_config = {
        "json_schema_extra": {
            "examples": [{"id": "123e4567-e89b-12d3-a456-426614174000", "location": {"x": 10, "y": 20}}]
        }
    }


class NewCourierTest(BaseModel):
    """Модель для создания нового курьера."""

    name: Annotated[str, StringConstraints(min_length=1)] = Field(description="Имя")
    speed: Annotated[int, Field(ge=1)] = Field(description="Скорость")

    model_config = {"json_schema_extra": {"examples": [{"name": "John Doe", "speed": 5}]}}


class CourierTest(BaseModel):
    """Модель курьера."""

    id: UUID = Field(description="Идентификатор")
    name: str = Field(description="Имя")
    location: Location = Field(description="Геолокация")

    model_config = {
        "json_schema_extra": {
            "examples": [
                {"id": "123e4567-e89b-12d3-a456-426614174000", "name": "John Doe", "location": {"x": 10, "y": 20}}
            ]
        }
    }


class Error(BaseModel):
    """Модель ошибки."""

    code: int = Field(description="Код ошибки")
    message: str = Field(description="Текст ошибки")

    model_config = {"json_schema_extra": {"examples": [{"code": 404, "message": "Not found"}]}}
